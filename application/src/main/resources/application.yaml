debug: true

spring:
  application:
    name: template-app

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://http://192.168.1.139:32080/realms/xavelo
          jwk-set-uri: https://http://192.168.1.139:32080/realms/xavelo/protocol/openid-connect/certs

  datasource:
    url: jdbc:mysql://template-mysql.mysql.svc.cluster.local:3306/template-app
    driverClassName: com.mysql.cj.jdbc.Driver
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
  flyway:
    baseline-on-migrate: true
    mysql:
      enabled: true

  kafka:
    bootstrap-servers: my-kafka-kafka-bootstrap.kafka.svc.cluster.local:9092

resilience4j:
  circuitbreaker:
    aspect-order: 200
    instances:
      externalApi:
        register-health-indicator: true
        sliding-window-type: count_based
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 2
        automatic-transition-from-open-to-half-open-enabled: true
  retry:
    aspect-order: 100
    instances:
      externalApi:
        max-attempts: 3
        wait-duration: 500ms
        retry-exceptions:
          - org.springframework.web.client.RestClientException
  timelimiter:
    instances:
      externalApi:
        timeout-duration: 3s

management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,prometheus,circuitbreakerevents"
  endpoint:
    health:
      show-details: when_authorized
  health:
    circuitbreakers:
      enabled: true

kafka:
  consumer:
    topic: test-topic
    group-id: template-app-test-topic-consumer
    concurrency: 1
    error-backoff-interval-ms: 1000
    error-max-retries: 3

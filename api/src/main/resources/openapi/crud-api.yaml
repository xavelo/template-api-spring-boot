openapi: 3.0.3
info:
  title: Item API Template
  version: 1.0.0
  description: |
    Template OpenAPI contract that defines CRUD operations for managing generic
    `Item` resources. This specification can be used as scaffolding when implementing
    REST endpoints backed by persistence stores.
servers:
  - url: /
paths:
  /api/items:
    get:
      tags:
        - Item
      operationId: listItems
      summary: Retrieves a paginated list of Items.
      parameters:
        - name: page
          in: query
          description: Zero-based page index to retrieve.
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: size
          in: query
          description: Number of records to include in each page.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 20
        - name: sort
          in: query
          description: Sorting definition in the form `property,(asc|desc)`.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved Items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemPage'
        '400':
          description: Invalid request parameters supplied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Item
      operationId: createItem
      summary: Creates a new Item.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemCreateRequest'
      responses:
        '201':
          description: Item successfully created.
          headers:
            Location:
              description: URI of the newly created Item.
              schema:
                type: string
        '400':
          description: Invalid Item payload supplied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/items/{itemId}:
    parameters:
      - $ref: '#/components/parameters/ItemIdPath'
    get:
      tags:
        - Item
      operationId: getItem
      summary: Retrieves a single Item by its identifier.
      responses:
        '200':
          description: Item successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Item not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  parameters:
    ItemIdPath:
      name: itemId
      in: path
      description: Unique identifier of the Item.
      required: true
      schema:
        type: string
  schemas:
    Item:
      type: object
      description: Representation of an Item persisted in the system.
      required:
        - id
        - name
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: Server-assigned unique identifier.
        name:
          type: string
          description: Human readable name for the Item.
        description:
          type: string
          nullable: true
          description: Optional descriptive text.
        createdAt:
          type: string
          format: date-time
          description: Timestamp indicating when the Item was created.
        updatedAt:
          type: string
          format: date-time
          description: Timestamp of the most recent update to the Item.
    ItemCreateRequest:
      type: object
      description: Payload used when creating a new Item.
      required:
        - name
      properties:
        name:
          type: string
          description: Human readable name for the Item.
        description:
          type: string
          nullable: true
          description: Optional descriptive text.
    ItemPage:
      type: object
      description: Paginated collection of Items.
      required:
        - content
        - page
        - size
        - totalElements
        - totalPages
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        page:
          type: integer
          minimum: 0
          description: Current page index.
        size:
          type: integer
          minimum: 1
          description: Size of the page that was requested.
        totalElements:
          type: integer
          minimum: 0
          description: Total number of Items available.
        totalPages:
          type: integer
          minimum: 0
          description: Total number of pages available.
    ErrorResponse:
      type: object
      description: Generic error response payload.
      required:
        - message
      properties:
        message:
          type: string
          description: Human readable description of the error.
        details:
          type: array
          nullable: true
          description: Optional list of field level validation errors.
          items:
            type: string
